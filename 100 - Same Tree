Pattern : 
------------------------------
I used recurvise approach but can conventionally use DFS with Two Stacks


Test Cases : 
------------------------------
p = [1,2,3] q = [1,2,3] | true    {all three cases of validation passed}
p = [1,2] q =  [1,null.2] | false {structure case (2nd failed)}

Learning : 
-----------------------------
The lengthy the complexity feels, the easier the Recursion implements.


Code : 
------------------------------
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p==null && q==null) return true;
        if(p==null || q==null) return false;
        if(p.val != q.val) return false;

        return isSameTree(p.left,q.left) && isSameTree(p.right,q.right);
    }
}
